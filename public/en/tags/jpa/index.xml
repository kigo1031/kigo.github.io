<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JPA on Kigo&#39;s Blog - 백엔드 Java 개발자</title>
    <link>http://localhost:1313/en/tags/jpa/</link>
    <description>Recent content in JPA on Kigo&#39;s Blog - 백엔드 Java 개발자</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Aug 2025 10:00:00 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/en/tags/jpa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Complete Quarkus JPA Guide - From Entity to Transaction</title>
      <link>http://localhost:1313/en/blog/quarkus-jpa-guide/</link>
      <pubDate>Sun, 03 Aug 2025 10:00:00 +0900</pubDate>
      <guid>http://localhost:1313/en/blog/quarkus-jpa-guide/</guid>
      <description>&lt;p&gt;When transitioning from Spring Boot to Quarkus, one of the first questions that comes to mind is &amp;ldquo;How do I handle database integration?&amp;rdquo; Fortunately, Quarkus provides excellent JPA support, often with better performance and simpler configuration.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Database Design Patterns for Java Applications</title>
      <link>http://localhost:1313/en/blog/database-design-patterns/</link>
      <pubDate>Tue, 05 Apr 2022 05:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/blog/database-design-patterns/</guid>
      <description>&lt;p&gt;Solid database design is essential for efficient Java application development. Let&amp;rsquo;s explore database design patterns that satisfy both performance and maintainability using JPA and Spring Data.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
