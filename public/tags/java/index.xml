<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Kigo's Blog - 백엔드 Java 개발자</title><link>https://kigo1031.github.io/tags/java/</link><description>Recent content in Java on Kigo's Blog - 백엔드 Java 개발자</description><generator>Hugo</generator><language>ko-kr</language><lastBuildDate>Sun, 03 Aug 2025 13:00:00 +0900</lastBuildDate><atom:link href="https://kigo1031.github.io/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Quarkus로 시작하는 Cloud Native Java 개발</title><link>https://kigo1031.github.io/blog/quarkus-cloud-native-java/</link><pubDate>Sun, 03 Aug 2025 13:00:00 +0900</pubDate><guid>https://kigo1031.github.io/blog/quarkus-cloud-native-java/</guid><description>&lt;p>최근 클라우드 네이티브 환경에서 Java 애플리케이션의 한계점들이 많이 언급되고 있습니다. 특히 &lt;strong>높은 메모리 사용량&lt;/strong>과 &lt;strong>느린 시작 시간&lt;/strong> 때문에 컨테이너 환경에서는 다소 불리한 면이 있었죠. 이런 문제를 해결하기 위해 등장한 것이 바로 &lt;strong>Quarkus&lt;/strong>입니다.&lt;/p></description></item><item><title>Quarkus JPA 완전 정복 - 엔티티부터 트랜잭션까지</title><link>https://kigo1031.github.io/blog/quarkus-jpa-guide/</link><pubDate>Sun, 03 Aug 2025 10:00:00 +0900</pubDate><guid>https://kigo1031.github.io/blog/quarkus-jpa-guide/</guid><description>&lt;p>Spring Boot에서 JPA를 사용하다 Quarkus로 넘어오면서 가장 궁금했던 것이 &amp;ldquo;데이터베이스 연동은 어떻게 하지?&amp;ldquo;였습니다. 다행히 Quarkus도 JPA를 완벽 지원하며, 오히려 더 간단하고 성능이 좋은 경우가 많습니다.&lt;/p></description></item><item><title>Spring Boot 프로덕션 베스트 프랙티스</title><link>https://kigo1031.github.io/blog/spring-boot-best-practices/</link><pubDate>Mon, 04 Apr 2022 05:00:00 +0000</pubDate><guid>https://kigo1031.github.io/blog/spring-boot-best-practices/</guid><description>&lt;p>프로덕션에서 안정적인 Spring Boot 애플리케이션을 만들기 위해서는 기본 기능 구현 이상의 것들이 필요합니다. 견고하고 안전하며 유지보수가 가능한 애플리케이션을 만들기 위한 필수 관례들을 알아보겠습니다.&lt;/p></description></item></channel></rss>