<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JPA on Kigo&#39;s Blog - 백엔드 Java 개발자</title>
    <link>http://localhost:1314/tags/jpa/</link>
    <description>Recent content in JPA on Kigo&#39;s Blog - 백엔드 Java 개발자</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 03 Aug 2025 10:00:00 +0900</lastBuildDate>
    <atom:link href="http://localhost:1314/tags/jpa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Quarkus JPA 완전 정복 - 엔티티부터 트랜잭션까지</title>
      <link>http://localhost:1314/blog/quarkus-jpa-guide/</link>
      <pubDate>Sun, 03 Aug 2025 10:00:00 +0900</pubDate>
      <guid>http://localhost:1314/blog/quarkus-jpa-guide/</guid>
      <description>&lt;p&gt;Spring Boot에서 JPA를 사용하다 Quarkus로 넘어오면서 가장 궁금했던 것이 &amp;ldquo;데이터베이스 연동은 어떻게 하지?&amp;ldquo;였습니다. 다행히 Quarkus도 JPA를 완벽 지원하며, 오히려 더 간단하고 성능이 좋은 경우가 많습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java 애플리케이션을 위한 데이터베이스 설계 패턴</title>
      <link>http://localhost:1314/blog/database-design-patterns/</link>
      <pubDate>Tue, 05 Apr 2022 05:00:00 +0000</pubDate>
      <guid>http://localhost:1314/blog/database-design-patterns/</guid>
      <description>&lt;p&gt;효율적인 Java 애플리케이션 개발을 위해서는 견고한 데이터베이스 설계가 필수입니다. JPA와 Spring Data를 활용하여 성능과 유지보수성을 모두 만족하는 데이터베이스 설계 패턴들을 알아보겠습니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
