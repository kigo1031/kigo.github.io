<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>설계 패턴 on Kigo's Blog - 백엔드 Java 개발자</title><link>https://kigo1031.github.io/tags/%EC%84%A4%EA%B3%84-%ED%8C%A8%ED%84%B4/</link><description>Recent content in 설계 패턴 on Kigo's Blog - 백엔드 Java 개발자</description><generator>Hugo</generator><language>ko-kr</language><lastBuildDate>Tue, 05 Apr 2022 05:00:00 +0000</lastBuildDate><atom:link href="https://kigo1031.github.io/tags/%EC%84%A4%EA%B3%84-%ED%8C%A8%ED%84%B4/index.xml" rel="self" type="application/rss+xml"/><item><title>Java 애플리케이션을 위한 데이터베이스 설계 패턴</title><link>https://kigo1031.github.io/blog/database-design-patterns/</link><pubDate>Tue, 05 Apr 2022 05:00:00 +0000</pubDate><guid>https://kigo1031.github.io/blog/database-design-patterns/</guid><description>&lt;p>효율적인 Java 애플리케이션 개발을 위해서는 견고한 데이터베이스 설계가 필수입니다. JPA와 Spring Data를 활용하여 성능과 유지보수성을 모두 만족하는 데이터베이스 설계 패턴들을 알아보겠습니다.&lt;/p></description></item></channel></rss>